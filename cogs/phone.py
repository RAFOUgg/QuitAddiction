# --- cogs/phone.py ---
from discord.ext import commands
import discord
from db.database import SessionLocal
from db.models import ServerState # Import√© pour acc√©der aux donn√©es si n√©cessaire

class Phone(commands.Cog):
    """Gestion du t√©l√©phone : quiz, messages et missions sociales."""
    def __init__(self, bot):
        self.bot = bot

    @commands.command()
    async def quiz(self, ctx):
        """
        Envoie une question √©ducative avec boutons pour interagir.
        """
        # R√©cup√©rer l'√©tat du serveur si n√©cessaire pour personnaliser la question
        db = SessionLocal()
        state = db.query(ServerState).filter_by(guild_id=str(ctx.guild.id)).first()
        db.close()

        # Question exemple
        question = "Quel est le mode de consommation le moins nocif ?"
        
        # Cr√©ation des options de r√©ponse
        options = [
            discord.SelectOption(label="A) La consommation r√©guli√®re et mod√©r√©e", value="regular_moderate"),
            discord.SelectOption(label="B) L'abstinence totale", value="abstinence"),
            discord.SelectOption(label="C) La consommation occasionnelle et √† faible dose", value="occasional_low_dose"),
            discord.SelectOption(label="D) Le 'binge drinking' (consommation excessive)", value="binge_drinking")
        ]

        # Cr√©ation du message avec la question et un menu d√©roulant pour les r√©ponses
        # Note: Pour utiliser des SelectOptions, il faut cr√©er une classe Select personnalis√©e qui h√©rite de ui.Select.
        # Ici, on va rester sur un message simple pour l'instant, car la logique du Select n'est pas impl√©ment√©e ici.
        await ctx.send(f"üì± Nouveau message : {question}")
        # Si vous voulez des boutons, vous devrez cr√©er une classe `discord.ui.Button` et l'ajouter √† une vue.

async def setup(bot):
    await bot.add_cog(Phone(bot))